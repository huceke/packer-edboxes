# packer edboxes : extensible box ( vm ) creation tool.
#
# Copyright (C) 2021  Edgar Vichor ebsi4711 at gmail dot com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

- name: boxes build
  hosts: 127.0.0.1
  connection: local
  become: false
  gather_facts: yes

  vars_files:
    - "boxconfig.yml"

  vars:

    working_dir: "{{ lookup('env', 'PWD') }}"
    template_dir: "{{ working_dir }}/source/templates"
    http_dir: "{{ working_dir }}/build/http"
    tmp_dir: "{{ working_dir }}/build/tmp"
    packer_cache: "{{ working_dir }}/build/tmp/packer_cache"
    packer_template_file: "{{ template_dir }}/packer/builder.json.j2"
    packer_template_file_output: "{{ working_dir }}/build/builder-{{ box_name }}-{{ box_distribution }}-{{ box_boottype }}-{{ box_encrypt }}.json"
    packer_replace_iso_urls: ""
    packer_pre_ansible_scripts_replace: ""
    packer_ansible_install_replace: ""
    packer_post_ansible_scripts_replace: ""
    packer_ansible_run_replace: ""

    efi_bios: "{{ box_efi_bios }}"
    efi_bios_vars: "{{ box_efi_bios_vars }}"
    efi_bios_vars_copy: "{{ working_dir }}/build/builder-{{ box_name }}-{{ box_distribution }}-{{ box_boottype }}-{{ box_encrypt }}.evivars"

    box_vagrant_password: ""
    box_vagrant_password_replace: ""
    box_qemu_efi_bios_replace: ""
    box_qemu_efi_bios_replace: ""
    box_qemu_efi_bios_replace: ""
    box_name_filename_replace: ""
    box_boot_command_replace: ""

    http_part_settings_replace: ""
    http_encryption_settings_replace: ""
    http_efi_boot_replace: ""

    builder_http_file:
      archlinux:  "archbootstrap.sh-{{ box_boottype }}-{{ box_encrypt }}"
      debian:     "debian10-preseed.cfg-{{ box_boottype }}-{{ box_encrypt }}"
      ubuntu:     "user-data"
      fedora:     "fedora41-kvm-ks.cfg-{{ box_boottype }}-{{ box_encrypt }}"
      rhel9:      "rhel9-kvm-ks.cfg-{{ box_boottype }}-{{ box_encrypt }}"
      rhel8:      "rhel8-kvm-ks.cfg-{{ box_boottype }}-{{ box_encrypt }}"
      rhel7:      "rhel7-kvm-ks.cfg-{{ box_boottype }}-{{ box_encrypt }}"
      rocky8:     "rocky8-kvm-ks.cfg-{{ box_boottype }}-{{ box_encrypt }}"
      almalinux:  "almalinux-kvm-ks.cfg-{{ box_boottype }}-{{ box_encrypt }}"

    builder_http_dst_file_j2: "{{ http_dir }}/{{ builder_http_file[box_distribution] }}"

    builder_template_file_j2:
      archlinux:  "{{ template_dir }}/http/archbootstrap.sh.j2"
      debian:     "{{ template_dir }}/http/debian10-preseed.cfg.j2"
      ubuntu:     "{{ template_dir }}/http/user-data-ubuntu-2004.j2"
      fedora:     "{{ template_dir }}/http/fedora41-kvm-ks.cfg.j2"
      rhel9:      "{{ template_dir }}/http/rhel9-kvm-ks.cfg.j2"
      rhel8:      "{{ template_dir }}/http/rhel8-kvm-ks.cfg.j2"
      rhel7:      "{{ template_dir }}/http/rhel7-kvm-ks.cfg.j2"
      rocky8:     "{{ template_dir }}/http/rocky8-kvm-ks.cfg.j2"
      almalinux:  "{{ template_dir }}/http/almalinux-kvm-ks.cfg.j2"

    packer_image_dir:
      archlinux:  "{{ working_dir }}/build/images/archlinux"
      debian:     "{{ working_dir }}/build/images/debian"
      ubuntu:     "{{ working_dir }}/build/images/ubuntu"
      fedora:     "{{ working_dir }}/build/images/fedora"
      rhel9:      "{{ working_dir }}/build/images/rhel9"
      rhel8:      "{{ working_dir }}/build/images/rhel8"
      rhel7:      "{{ working_dir }}/build/images/rhel7"
      rocky8:     "{{ working_dir }}/build/images/rocky8"
      almalinux:  "{{ working_dir }}/build/images/almalinux"

    packer_iso:
      archlinux:
        cache_id: "f7dc56aada775e389cf4012dce81f8ec17aca9f4"
        checksum: "sha256:8150e3c1a479de9134baa13cea4ff78856cca5ebeb9bdfa87ecfce2e47ac9b5b"
        urls: 
          - '"iso/archlinux-2025.03.01-x86_64.iso",'
          - '"https://mirror.easyname.at/archlinux/iso/2025.03.01/archlinux-2025.03.01-x86_64.iso"'
      debian:
        checksum: "sha256:1257373c706d8c07e6917942736a865dfff557d21d76ea3040bb1039eb72a054"
        urls: 
          - '"iso/debian-12.9.0-amd64-netinst.iso",'
          - '"https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-12.9.0-amd64-netinst.iso"'
      ubuntu:
        cache_id: "47de2d7266acde194681de2a24f5d76b43b452ca"
        checksum: "sha256:28ccdb56450e643bad03bb7bcf7507ce3d8d90e8bf09e38f6bd9ac298a98eaad"
        urls: 
          - '"iso/ubuntu-20.04.4-live-server-amd64.iso",'
          - '"https://releases.ubuntu.com/20.04/ubuntu-20.04.4-live-server-amd64.iso"'
      fedora:
        checksum: "sha256:630c52ba9e7a7f229b026e241ba74b9bc105e60ba5bf7b222693ae0e25f05c97"
        urls: 
          - '"iso/Fedora-Server-netinst-x86_64-41-1.4.iso",'
          - '"https://mirror.karneval.cz/pub/linux/fedora/linux/releases/41/Server/x86_64/iso/Fedora-Server-netinst-x86_64-41-1.4.iso"'
      rhel9:
        checksum: "sha256:a18bf014e2cb5b6b9cee3ea09ccfd7bc2a84e68e09487bb119a98aa0e3563ac2"
        urls:
          - '"iso/rhel-9.2-x86_64-dvd.iso",'
      rhel8:
        checksum: "sha256:517abcc67ee3b7212f57e180f5d30be3e8269e7a99e127a3399b7935c7e00a09"
        urls: 
          - '"iso/rhel-8.8-x86_64-dvd.iso",'
      rhel7:
        checksum: "sha256:19d653ce2f04f202e79773a0cbeda82070e7527557e814ebbce658773fbe8191"
        urls: 
          - '"iso/rhel-server-7.9-x86_64-dvd.iso",'
      rocky8:
        checksum: "sha256:53a62a72881b931bdad6b13bcece7c3a2d4ca9c4a2f1e1a8029d081dd25ea61f"
        urls:
          - '"iso/x86_64/Rocky-8.4-x86_64-boot.iso",'
          - '"https://download.rockylinux.org/pub/rocky/8/isos/x86_64/Rocky-8.4-x86_64-boot.iso"'
      almalinux:
        checksum: "sha256:3038fb71a29d33c3c93117bd8f4c3f612cb152dce057c666b6b11dfa793fb65c"
        urls:
          - '"iso/x86_64/AlmaLinux-9.5-x86_64-boot.iso",'
          - '"https://ftp.uni-bayreuth.de/linux/almalinux/9.5/isos/x86_64/AlmaLinux-9.5-x86_64-boot.iso"'

    boot_wait:
      archlinux:  "10s"
      debian:     "10s"
      ubuntu:     "2s"
      fedora:     "10s"
      rhel9:      "10s"
      rhel8:      "10s"
      rhel7:      "10s"
      rocky8:     "10s"
      almalinux:  "10s"

    boot_command:
      archlinux:
        mbr:
          - '"<enter><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10>",'
          - '"/usr/bin/curl -O http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<enter><wait5>",'
          - '"/usr/bin/bash ./{{ builder_http_file[box_distribution] }}<enter>"'
        efi:
          - '"<enter><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10>",'
          - '"/usr/bin/curl -O http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<enter><wait5>",'
          - '"/usr/bin/bash ./{{ builder_http_file[box_distribution] }}<enter>"'
      fedora:
        mbr:
          - '"<up>e<down><down><end> inst.text inst.ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<wait><F10>"'
        efi:
          - '"<up><wait>e<wait><down><down><end> inst.ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<wait><leftCtrlOn><x>"'
      debian:
        mbr:
          - '"<esc><wait>",'
          - '"install <wait>",'
          - '" preseed/url=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }} <wait>",'
          - '"debian-installer={{ box_locale }} <wait>",'
          - '"auto <wait>",'
          - '"locale={{ box_locale }} <wait>",'
          - '"kbd-chooser/method={{ box_xorg_keymap }} <wait>",'
          - '"keyboard-configuration/xkb-keymap={{ box_xorg_keymap }} <wait>",'
          - '"netcfg/get_hostname={{ box_name }} <wait>",'
          - '"netcfg/get_domain=localdomain.local ",'
          - '"netcfg/get_domain=vagrantup.com <wait>",'
          - '"fb=false <wait>",'
          - '"debconf/frontend=noninteractive <wait>",'
          - '"console-setup/ask_detect=false <wait>",'
          - '"console-keymaps-at/keymap={{ box_xorg_keymap }} <wait>",'
          - '"grub-installer/bootdev=/dev/vda <wait>",'
          - '"<enter><wait>"'
        efi:
          - '"<wait>c<wait>",'
          - '"linux /install.amd/vmlinuz ",'
          - '"url=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }} ",'
          - '"debian-installer={{ box_locale }} ",'
          - '"auto ",'
          - '"locale={{ box_locale }} ",'
          - '"kbd-chooser/method={{ box_xorg_keymap }} ",'
          - '"keyboard-configuration/xkb-keymap={{ box_xorg_keymap }} ",'
          - '"netcfg/get_hostname={{ box_name }} ",'
          - '"netcfg/get_domain=localdomain.local ",'
          - '"fb=false ",'
          - '"debconf/frontend=noninteractive ",'
          - '"console-setup/ask_detect=false ",'
          - '"console-keymaps-at/keymap=de <enter>",'
          - '"initrd /install.amd/initrd.gz<enter>",'
          - '"boot<enter>"'
      ubuntu:
        mbr:
          - '"<enter><enter><f6><esc><wait>",'
          - '"<bs><bs><bs><bs><bs><bs>",'
          - '" autoinstall ds=nocloud-net;s=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/",'
          - '" --- <enter><wait>"'
        efi:
          - '"e<wait><down><down><down><end>",'
          - '"<bs><bs><bs>",'
          - '" autoinstall \"ds=nocloud-net;s=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/\"",'
          - '" --- <wait><f10><wait>"'
      rhel9:
        mbr:
          - '"<up><wait><tab><wait> text inst.ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<enter><wait>"'
        efi:
          - '"<up><wait>e<wait><down><down><end> inst.ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<wait><leftCtrlOn><x>"'
      rhel8:
        mbr:
          - '"<up><wait><tab><wait> text ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<enter><wait>"'
        efi:
          - '"<up><wait>e<wait><down><down><end> ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<wait><leftCtrlOn><x>"'
      rhel7:
        mbr:
          - '"<up><wait><tab><wait> text ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<enter><wait>"'
        efi:
          - '"<up><wait>e<wait><down><down><end> ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<wait><leftCtrlOn><x>"'
      rocky8:
        mbr:
          - '"<up><wait><tab><wait> text ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<enter><wait>"'
        efi:
          - '"<up><wait>e<wait><down><down><end> ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<wait><leftCtrlOn><x>"'
      almalinux:
        mbr:
          - '"<up><wait><tab><wait> text inst.ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<enter><wait>"'
        efi:
          - '"<up><wait>e<wait><down><down><end> inst.ks=http://{% raw %}{{ .HTTPIP }}:{{ .HTTPPort }}{% endraw %}/{{ builder_http_file[box_distribution] }}<wait><leftCtrlOn><x>"'

    packer_ansible_install:
      archlinux:
        - '"yes | pacman -Suy",'
        - '"yes | pacman -S ansible"'
      fedora:
        - '"dnf install -y python-libselinux ansible"'
      debian:
        - '"apt-get -y install ansible",'
        - '"apt-get -y install ansible-lint",'
        - '"echo \"vagrant        ALL=(ALL)       NOPASSWD: ALL\" >> /etc/sudoers.d/vagrant"'
      ubuntu:
        - '"apt-get -y install ansible",'
        - '"apt-get -y install ansible-lint",'
        - '"echo \"vagrant        ALL=(ALL)       NOPASSWD: ALL\" >> /etc/sudoers.d/vagrant"'
      rhel9:
        - '""'
      rhel8:
        - '""'
      rhel7:
        - '""'
      rocky8:
        - '"dnf -y install epel-release",'
        - '"dnf -y install ansible"'
      almalinux:
        - '"dnf -y install epel-release",'
        - '"dnf -y install ansible"'

    packer_pre_ansible_scripts:
      archlinux:
        - '"source/script/dummy.sh"'
      fedora:
        - '"source/script/dummy.sh"'
      debian:
        - '"source/script/dummy.sh"'
      ubuntu:
        - '"source/script/dummy.sh"'
      rhel9:
        - '"source/script/rhel9-ansible.sh"'
      rhel8:
        - '"source/script/rhel8-ansible.sh"'
      rhel7:
        - '"source/script/rhel7-ansible.sh"'
      rocky8:
        - '"source/script/dummy.sh"'
      almalinux:
        - '"source/script/dummy.sh"'

    packer_post_ansible_scripts:
      archlinux:
        - '"source/script/cleanup.sh"'
      fedora:
        - '"source/script/cleanup.sh"'
      debian:
        - '"source/script/cleanup.sh"'
      ubuntu:
        - '"source/script/cleanup.sh"'
      rhel9:
        - '"source/script/rhel9-ansible-post.sh",'
        - '"source/script/cleanup.sh"'
      rhel8:
        - '"source/script/rhel8-ansible-post.sh",'
        - '"source/script/cleanup.sh"'
      rhel7:
        - '"source/script/rhel7-ansible-post.sh",'
        - '"source/script/cleanup.sh"'
      rocky8:
        - '"source/script/cleanup.sh"'
      almalinux:
        - '"source/script/cleanup.sh"'

    http_encryption_settings:
      archlinux:
        none:
          - 'ENCRYPT=no'
        luks:
          - 'ENCRYPT=yes'
      fedora:
        none:
          - 'part pv.4 --grow --size=100'
        luks:
          - 'part pv.4 --grow --size=100 --encrypted  --luks-version=luks2 --cipher=aes-xts-plain64 --pbkdf-time=5000 --passphrase={{ box_password }}'
      debian:
        none:
          - '# without crypt'
          - 'd-i partman-auto/method string lvm'
        luks:
          - '# with crypt'
          - 'd-i partman-auto/method string crypto'
          - 'd-i partman-crypto/passphrase password {{ box_password }}'
          - 'd-i partman-crypto/passphrase-again password {{ box_password }}'
          - 'd-i partman-crypto/weak_passphrase true'
      ubuntu:
        none:
          - '    - name: rootvg_vm'
          - '      devices: [partition-2]'
        luks:
          - '    - {volume: partition-2, keyfile: /tmp/luks-key, preserve: false, type: dm_crypt,'
          - '      id: dm_crypt-0}'
          - '    - name: rootvg_vm'
          - '      devices: [dm_crypt-0]'
      rhel9:
        none:
          - 'part pv.4 --grow --size=100'
        luks:
          - 'part pv.4 --grow --size=100 --encrypted  --luks-version=luks2 --cipher=aes-xts-plain64 --pbkdf-time=5000 --passphrase={{ box_password }}'
      rhel8:
        none:
          - 'part pv.4 --grow --size=100'
        luks:
          - 'part pv.4 --grow --size=100 --encrypted  --luks-version=luks2 --cipher=aes-xts-plain64 --pbkdf-time=5000 --passphrase={{ box_password }}'
      rhel7:
        none:
          - 'part pv.4 --grow --size=100'
        luks:
          - 'part pv.4 --grow --size=100 --encrypted  --luks-version=luks2 --cipher=aes-xts-plain64 --pbkdf-time=5000 --passphrase={{ box_password }}'
      rocky8:
        none:
          - 'part pv.4 --grow --size=100'
        luks:
          - 'part pv.4 --grow --size=100 --encrypted  --luks-version=luks2 --cipher=aes-xts-plain64 --pbkdf-time=5000 --passphrase={{ box_password }}'
      almalinux:
        none:
          - 'part pv.4 --grow --size=100'
        luks:
          - 'part pv.4 --grow --size=100 --encrypted  --luks-version=luks2 --cipher=aes-xts-plain64 --pbkdf-time=5000 --passphrase={{ box_password }}'

    http_efi_boot:
      archlinux:
        mbr:
          - 'BOOTTYPE=mbr'
        efi:
          - 'BOOTTYPE=efi'
      fedora:
        mbr:
          - ''
        efi:
          - ''
      debian:
        mbr:
          - ''
        efi:
          - 'd-i partman-efi/non_efi_system boolean true'
      ubuntu:
        mbr:
          - ''
        efi:
          - ''
      rhel9:
        mbr:
          - ''
        efi:
          - ''
      rhel8:
        mbr:
          - ''
        efi:
          - ''
      rhel7:
        mbr:
          - ''
        efi:
          - ''
      rocky8:
        mbr:
          - ''
        efi:
          - ''
      almalinux:
        mbr:
          - ''
        efi:
          - ''

    http_part_settings:
      archlinux:
        mbr:
        efi:
      fedora:
        mbr:
          - 'part biosboot --fstype=biosboot --size=1'
          - 'part /boot --fstype="ext4" --size=1024'
        efi:
          - 'part /boot/efi --fstype="efi" --size=512 --fsoptions="umask=0077,shortname=winnt"'
          - 'part /boot --fstype="ext4" --size=1024'
      debian:
        mbr:
          - '      500 500 500 ext3                                \'
          - '            $primary{ } $bootable{ }                \'
          - '              method{ format } format{ }              \'
          - '               use_filesystem{ } filesystem{ ext4 }    \'
          - '              mountpoint{ /boot }                     \'
          - '      .                                               \'
        efi:
          - '      538 538 1075 free     \'
          - '          $iflabel{ gpt }   \'
          - '          $reusemethod{ }   \'
          - '          method{ efi }     \'
          - '          format{ }         \'
          - '      .                     \'
          - '      500 500 500 ext3      \'
          - '        $defaultignore{ }   \'
          - '        method{ format }    \'
          - '        format{ }           \'
          - '        use_filesystem{ }   \'
          - '        filesystem{ ext3 }  \'
          - '        mountpoint{ /boot } \'
          - '      .                     \'
      ubuntu:
        mbr:
          - '    - {ptable: gpt, path: /dev/vda, wipe: superblock-recursive, preserve: false, name: '''','
          - '      grub_device: true, type: disk, id: disk-vda}'
          - '    - {device: disk-vda, size: 1048576, flag: bios_grub, number: 1, preserve: false,'
          - '      grub_device: false, type: partition, id: partition-0}'
          - '    - {device: disk-vda, size: 512M, wipe: superblock, flag: '''', number: 2, preserve: false,'
          - '      grub_device: false, type: partition, id: partition-1}'
          - '    - {fstype: ext4, volume: partition-1, preserve: false, type: format, id: format-0}'
          - '    - {device: disk-vda, size: -1, wipe: superblock, flag: '''', number: 3,'
          - '      preserve: false, grub_device: false, type: partition, id: partition-2}'
          - '{% raw %}{ http_encryption_settings }{% endraw %}'
          - '      preserve: false'
          - '      type: lvm_volgroup'
          - '      id: lvm_volgroup-1'
          - '    - {name: lv_root, volgroup: lvm_volgroup-1, size: 12G, preserve: false,'
          - '      type: lvm_partition, id: lvm_partition-0}'
          - '    - {fstype: ext4, volume: lvm_partition-0, preserve: false, type: format, id: format-1}'
          - '    - {device: format-1, path: /, type: mount, id: mount-1}'
          - '    - {device: format-0, path: /boot, type: mount, id: mount-0}'
        efi:
          - '    - {ptable: gpt, path: /dev/vda, wipe: superblock-recursive, preserve: false, name: '''','
          - '      grub_device: false, type: disk, id: disk-vda}'
          - '    - {device: disk-vda, size: 512M, wipe: superblock, flag: boot, number: 1,'
          - '      preserve: false, grub_device: true, type: partition, id: partition-0}'
          - '    - {fstype: fat32, volume: partition-0, preserve: false, type: format, id: format-0}'
          - '    - {device: disk-vda, size: 512M, wipe: superblock, flag: '''', number: 2, preserve: false,'
          - '      grub_device: false, type: partition, id: partition-1}'
          - '    - {fstype: ext4, volume: partition-1, preserve: false, type: format, id: format-1}'
          - '    - {device: disk-vda, size: -1, wipe: superblock, flag: '''', number: 3,'
          - '      preserve: false, grub_device: false, type: partition, id: partition-2}'
          - '{% raw %}{ http_encryption_settings }{% endraw %}'
          - '      preserve: false'
          - '      type: lvm_volgroup'
          - '      id: lvm_volgroup-0'
          - '    - {name: lv_root, volgroup: lvm_volgroup-0, size: 12G, preserve: false,'
          - '      type: lvm_partition, id: lvm_partition-0}'
          - '    - {fstype: ext4, volume: lvm_partition-0, preserve: false, type: format, id: format-2}'
          - '    - {device: format-2, path: /, type: mount, id: mount-2}'
          - '    - {device: format-1, path: /boot, type: mount, id: mount-1}'
          - '    - {device: format-0, path: /boot/efi, type: mount, id: mount-0}'          
      rhel9:
        mbr:
          - 'part /boot --fstype="ext4" --size=1024'
        efi:
          - 'part /boot/efi --fstype="efi" --size=512 --fsoptions="umask=0077,shortname=winnt"'
          - 'part /boot --fstype="ext4" --size=1024'
      rhel8:
        mbr:
          - 'part /boot --fstype="ext4" --size=1024'
        efi:
          - 'part /boot/efi --fstype="efi" --size=512 --fsoptions="umask=0077,shortname=winnt"'
          - 'part /boot --fstype="ext4" --size=1024'
      rhel7:
        mbr:
          - 'part /boot --fstype="ext4" --size=1024'
        efi:
          - 'part /boot/efi --fstype="efi" --size=512 --fsoptions="umask=0077,shortname=winnt"'
          - 'part /boot --fstype="ext4" --size=1024'
      rocky8:
        mbr:
          - 'part /boot --fstype="ext4" --size=1024'
        efi:
          - 'part /boot/efi --fstype="efi" --size=512 --fsoptions="umask=0077,shortname=winnt"'
          - 'part /boot --fstype="ext4" --size=1024'
      almalinux:
        mbr:
          - 'part /boot --fstype="ext4" --size=1024'
        efi:
          - 'part /boot/efi --fstype="efi" --size=512 --fsoptions="umask=0077,shortname=winnt"'
          - 'part /boot --fstype="ext4" --size=1024'

  tasks:

  - name: GPL Info
    debug:
      msg: "packer-edboxes, Copyright (C) 2021 Edgar Vichor. packer-edboxes comes with ABSOLUTELY NO WARRANTY. This is free software, and you are welcome to redistribute it under certain conditions."

  - name: check box_distribution
    fail:
      msg: 
        - "Unsupported box_distribution : {{ box_distribution }}"
        - "Supported : archlinux|fedora|debian|ubuntu|rhel9|rhel8|rhel7|rocky8|almalinux"
    when:
      - box_distribution != "archlinux"
      - box_distribution != "fedora"
      - box_distribution != "debian"
      - box_distribution != "ubuntu"
      - box_distribution != "rhel9"
      - box_distribution != "rhel8"
      - box_distribution != "rhel7"
      - box_distribution != "rocky8"
      - box_distribution != "almalinux"

  - name: check box_boottype
    fail:
      msg: 
        - "Unsupported box_boottype : {{ box_boottype }}"
        - "Supported : efi|mbr"
    when:
      - box_boottype != "efi"
      - box_boottype != "mbr"

  - name: check box_encrypt
    fail:
      msg: 
        - "Unsupported box_encrypt : {{ box_encrypt }}"
        - "Supported : none|luks"
    when:
      - box_encrypt != "none"
      - box_encrypt != "luks"

  - name: create vagrant password
    shell: openssl rand -base64 32
    register: openssl_password

  - name: register vagrant password
    set_fact:
      box_vagrant_password: "{{ item }}"
    with_items: "{{ openssl_password.stdout_lines }}"

  - name: debug vagrant password
    debug:
      msg: "{{ box_vagrant_password }}"

  - name: packer tmp directory -> {{ tmp_dir }}
    file:
      path: "{{ tmp_dir }}"
      state: directory
      mode: 0755
    become: false

  - name: packer http directory -> {{ http_dir }}
    file:
      path: "{{ http_dir }}"
      state: directory
      mode: 0755
    become: false

  - name: packer vm image output dir -> {{ packer_image_dir[box_distribution] }}
    file:
      path: "{{ packer_image_dir[box_distribution] }}"
      state: directory
      mode: 0755
    become: false

  - name: create ubuntu http meta-data
    file:
      path: "{{ http_dir }}/meta-data"
      state: touch
      mode: 0666
    become: false
    when: box_distribution == 'ubuntu'

  - name: box_distribution set vagrant password ubuntu
    set_fact:
      box_vagrant_password_replace: "{{ box_vagrant_password | password_hash('sha512') }}"
    when: box_distribution == 'ubuntu'

  - name: distributuion set partitioning
    set_fact:
      http_part_settings_replace: "{{ http_part_settings_replace }}{{ item }}\n"
    with_items: "{{ http_part_settings[box_distribution][box_boottype] }}"

#  - name: distributuion set partitioning encryption password
#    set_fact:
#      http_part_settings_replace: "{{ http_part_settings_replace | replace('{ box_password }', http_encryption_settings_replace) }}"
#    when: box_distribution == "ubuntu"

  - name: distributuion set encryption settings
    set_fact:
      http_encryption_settings_replace: "{{ http_encryption_settings_replace }}{{ item }}\n"
    with_items: "{{ http_encryption_settings[box_distribution][box_encrypt] }}"

  - name: distributuion replace encryption settings ubuntu
    set_fact:
      http_part_settings_replace: "{{ http_part_settings_replace | replace('{ http_encryption_settings }', http_encryption_settings_replace) }}"
    when: box_distribution == "ubuntu"

  - name: distributuion set efi boot
    set_fact:
      http_efi_boot_replace: "{{ http_efi_boot_replace }}{{ item }}\n"
    with_items: "{{ http_efi_boot[box_distribution][box_boottype] }}"

  # stupid rhel 7 ansible. lists are treated as a lists with unicode strings
  - name: convert addon list
    set_fact:
      box_addon_converted: "{{ box_addon | to_yaml | replace('\n', '')}}"

  # keep the whitespaces at the begin and end of the replace string. otherwise ansible thinks it's a dict
  - name: packer ansible run
    set_fact:
      packer_ansible_run_replace: |

        {
          "type": "ansible-local",
          "playbook_dir": "ansible",
          "playbook_file": "./ansible/playbook.yml",
          "extra_arguments": [
            "--extra-vars", 
            "\"{ box_name: {{ box_name }}, ansible_become_password: {{ box_vagrant_password }}, box_password: {{ box_password }}, box_addon: {{ box_addon_converted }}, box_desktop_user: {{ box_desktop_user }}, box_locale: {{ box_locale }}, box_timezone: {{ box_timezone }}, box_keymap: {{ box_keymap }}, box_xorg_keymap: {{ box_xorg_keymap }}, box_xorg_keymap_model: {{ box_xorg_keymap_model }}, box_xorg_keymap_vatiant: {{ box_xorg_keymap_vatiant }}, box_boottype: {{ box_boottype }} }\"",
             "-vvv"
          ],
          "clean_staging_directory": false
        },

    when: box_ansible_run or box_ansible_run | bool

  - name: packer ansible norun
    set_fact:
      packer_ansible_run_replace: ""
    when: not box_ansible_run

  - name: ubuntu efi workaround box_qemu_efi_bios_replace
    set_fact:
      box_qemu_efi_bios_replace: |
        , [ "-bios", "{{ efi_bios }}" ]
        , [ "-device", "virtio-blk-pci,drive=drive0,bootindex=0" ]
        , [ "-device", "virtio-blk-pci,drive=cdrom0,bootindex=1" ]
        , [ "-drive", "if=pflash,format=raw,readonly=on,file={{ efi_bios }}" ]
        , [ "-drive", "if=pflash,format=raw,file={{ efi_bios_vars_copy }}" ]
        , [ "-drive", "if=none,file={{ packer_image_dir[box_distribution] }}/{{ box_name }}-{{ box_distribution }}-{{ box_boottype }}-{{ box_encrypt }}.qcow2,cache=writeback,discard=ignore,format=qcow2,id=drive0" ]
        , [ "-drive", "if=none,file=build/tmp/packer_cache/{{ packer_iso[box_distribution]['cache_id'] }}.iso,media=cdrom,id=cdrom0" ]
    when: (box_distribution == "ubuntu" and box_boottype == "efi") or
          (box_distribution == "archlinux" and box_boottype == "efi")
      
  - name: packer set efi bios box_qemu_efi_bios_replace
    set_fact:
      box_qemu_efi_bios_replace: |
        , [ "-bios", "{{ efi_bios }}" ]
    when: (box_distribution != "ubuntu" and box_distribution != "archlinux") and
          box_boottype == "efi"

  - name: packer set mbr bios box_qemu_efi_bios_replace
    set_fact:
      box_qemu_efi_bios_replace: ""
    when: box_boottype == "mbr"

  - name: packer set box_name_filename_replace
    set_fact:
      box_name_filename_replace: "{{ box_name }}-{{ box_distribution }}-{{ box_boottype }}-{{ box_encrypt }}.qcow2"

  - name: packer set qemu_binary replacment
    set_fact:
      box_qemu_binary_replace: '"qemu_binary": "{{ box_qemu_binary }}",'
    when: box_qemu_binary | length > 0

  - name: packer set qemu_binary replacment
    set_fact:
      box_qemu_binary_replace: ''
    when: box_qemu_binary | length < 1

  - name: packer iso checksum
    set_fact:
      packer_iso_checksum: "{{ packer_iso[box_distribution]['checksum'] }}"

  - name: packer set iso urls
    set_fact:
      packer_replace_iso_urls: "{{ packer_replace_iso_urls }}{{ item }}\n"
    with_items: "{{ packer_iso[box_distribution]['urls'] }}"

  - name: packer set vm image dir
    set_fact:
      packer_output_directory: "{{ packer_image_dir[box_distribution] }}"

  - name: packer boot command
    set_fact:
      box_boot_command_replace: "{{ box_boot_command_replace }} {{ item }}\n "
    with_items: "{{ boot_command[box_distribution][box_boottype] }}"

  - name: packer boot_wait
    set_fact:
      packer_boot_wait: "{{ boot_wait[box_distribution] }}"

  - name: packer pre ansible install
    set_fact:
      packer_pre_ansible_scripts_replace: "{{ packer_pre_ansible_scripts_replace }}{{ item }}\n"
    with_items: "{{ packer_pre_ansible_scripts[box_distribution] }}"

  - name: packer pre ansible install
    set_fact:
      packer_pre_ansible_scripts: "\"script/dummy.sh\""
    when: not box_ansible_run

  - name: packer ansible install
    set_fact:
      packer_ansible_install_replace: "{{ packer_ansible_install_replace }}{{ item }}\n"
    with_items: "{{ packer_ansible_install[box_distribution] }}"

  - name: packer ansible install
    set_fact:
      packer_ansible_install_replace: "\"\""
    when: not box_ansible_run

  - name: packer post ansible scripts
    set_fact:
      packer_post_ansible_scripts_replace: "{{ packer_post_ansible_scripts_replace }}{{ item }}\n"
    with_items: "{{ packer_post_ansible_scripts[box_distribution] }}"

  - name: packer post ansible scripts
    set_fact:
      packer_post_ansible_scripts_replace: "\"source/script/dummy.sh\""
    when: not box_ansible_run

  - name: generate packer file
    template:
      src: "{{ packer_template_file }}"
      dest: "{{ packer_template_file_output }}"

  - name: generate http file
    template:
      src: "{{ builder_template_file_j2[box_distribution] }}"
      dest: "{{ builder_http_dst_file_j2 }}"

  - name: copy efi vars when boxtype efi
    copy:
      src: "{{ efi_bios_vars }}"
      dest: "{{ efi_bios_vars_copy }}"
    when: box_boottype == "efi"

  - name: print box settings
    debug:
      msg: 
        - "Distribution             : {{ box_distribution }}"
        - "Boottype                 : {{ box_boottype }}"
        - "Encrypt                  : {{ box_encrypt }}"
        - "Destop user              : {{ box_desktop_user }}"
        - "Box addon                : {{ box_addon_converted }}"
        - "Ansible run              : {{ box_ansible_run }}"
        - "Box disk size            : {{ box_disk_size }}"
        - "Box locale               : {{ box_locale }}"
        - "Box timezone             : {{ box_timezone }}"
        - "Box keymap               : {{ box_keymap }}"
        - "Box xorg keymap          : {{ box_xorg_keymap }}"
        - "Box xorg keymap model    : {{ box_xorg_keymap_model }}"
        - "Box xorg keymap variant  : {{ box_xorg_keymap_vatiant }}"
        - "Box QEMU cpu             : {{ box_qemu_cpu }}"

  - name: print build command
    debug:
      msg: "PACKER_CACHE_DIR={{ packer_cache }} TMPDIR={{ tmp_dir }} PACKER_LOG=1 packer build -force -on-error=abort {{ packer_template_file_output }}"

  - name: running packer
    ansible.builtin.shell: |
      cd {{ working_dir }}
      PACKER_CACHE_DIR={{ packer_cache }} TMPDIR={{ tmp_dir }} PACKER_LOG=1 packer build -force -on-error=abort {{ packer_template_file_output }}
    when: box_packer_run or box_packer_run | bool
